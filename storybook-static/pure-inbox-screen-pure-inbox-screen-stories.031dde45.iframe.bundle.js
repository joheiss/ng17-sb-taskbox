(self.webpackChunktaskbox=self.webpackChunktaskbox||[]).push([[273],{"./src/app/components/pure-task-list/pure-task-list.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{C:()=>PureTaskListComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var pure_task_list_componentngResource=__webpack_require__("./src/app/components/pure-task-list/pure-task-list.component.css?ngResource"),pure_task_list_componentngResource_default=__webpack_require__.n(pure_task_list_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),task_component=__webpack_require__("./src/app/components/task/task.component.ts");let PureTaskListComponent=class PureTaskListComponent{constructor(){this.tasksInOrder=[],this.loading=!1,this.onPinTask=new core.EventEmitter,this.onArchiveTask=new core.EventEmitter}set tasks(arr){const filteredTasks=[...arr.filter((t=>"TASK_PINNED"===t.state)),...arr.filter((t=>"TASK_PINNED"!==t.state))].filter((t=>"TASK_INBOX"===t.state||"TASK_PINNED"===t.state));this.tasksInOrder=filteredTasks.filter((t=>"TASK_INBOX"===t.state||"TASK_PINNED"===t.state))}static#_=this.propDecorators={loading:[{type:core.Input}],onPinTask:[{type:core.Output}],onArchiveTask:[{type:core.Output}],tasks:[{type:core.Input}]}};PureTaskListComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-pure-task-list",standalone:!0,imports:[common.CommonModule,task_component.m],template:'<div class="list-items">\n  @for (task of tasksInOrder; track task.id) {\n  <app-task [task]="task" (onArchiveTask)="onArchiveTask.emit($event)" (onPinTask)="onPinTask.emit($event)">\n  </app-task>\n  }\n  @if (tasksInOrder.length === 0 && !loading) {\n  <div class="wrapper-message">\n    <span class="icon-check"></span>\n    <p class="title-message">You have no tasks</p>\n    <p class="subtitle-message">Sit back and relax</p>\n  </div>\n  }\n  @if (loading) {\n  @for (i of [1,2,3,4,5,6]; track i) {\n  <div class="loading-item">\n    <span class="glow-checkbox"></span>\n    <span class="glow-text">\n      <span>Loading</span> <span>cool</span> <span>state</span>\n    </span>\n  </div>\n  }\n  }\n</div>',styles:[pure_task_list_componentngResource_default()]})],PureTaskListComponent)},"./src/app/components/task/task.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{m:()=>TaskComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var task_componentngResource=__webpack_require__("./src/app/components/task/task.component.css?ngResource"),task_componentngResource_default=__webpack_require__.n(task_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let TaskComponent=class TaskComponent{constructor(){this.onPinTask=new core.EventEmitter,this.onArchiveTask=new core.EventEmitter}onPin(id){this.onPinTask.emit(id)}onArchive(id){this.onArchiveTask.emit(id)}static#_=this.propDecorators={task:[{type:core.Input}],onPinTask:[{type:core.Output}],onArchiveTask:[{type:core.Output}]}};TaskComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-task",standalone:!0,imports:[],template:'<div class="list-item {{ task?.state }}">\n  <label [attr.aria-label]="\'archiveTask-\' + task?.id" for="checked-{{ task?.id }}" class="checkbox">\n    <input type="checkbox" disabled="true" [defaultChecked]="task?.state === \'TASK_ARCHIVED\'"\n      name="checked-{{ task?.id }}" id="checked-{{ task?.id }}" />\n    <span class="checkbox-custom" (click)="onArchive(task?.id)"></span>\n  </label>\n  <label [attr.aria-label]="task?.title + \'\'" for="title-{{ task?.id }}" class="title">\n    <input type="text" [value]="task?.title" readonly="true" id="title-{{ task?.id }}" name="title-{{ task?.id }}"\n      placeholder="Input title" />\n  </label>\n  @if (task?.state !== \'TASK_ARCHIVED\') {\n  <button class="pin-button" [attr.aria-label]="\'pinTask-\' + task?.id" (click)="onPin(task?.id)">\n    <span class="icon-star"></span>\n  </button>\n  }\n</div>',styles:[task_componentngResource_default()]})],TaskComponent)},"./src/app/components/pure-inbox-screen/pure-inbox-screen.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Error:()=>Error,WithInteractions:()=>WithInteractions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>pure_inbox_screen_stories});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var pure_inbox_screen_componentngResource=__webpack_require__("./src/app/components/pure-inbox-screen/pure-inbox-screen.component.css?ngResource"),pure_inbox_screen_componentngResource_default=__webpack_require__.n(pure_inbox_screen_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");var task_list_componentngResource=__webpack_require__("./src/app/components/task-list/task-list.component.css?ngResource"),task_list_componentngResource_default=__webpack_require__.n(task_list_componentngResource),ngxs_store=__webpack_require__("./node_modules/@ngxs/store/fesm2015/ngxs-store.js"),ngxs_store_operators=__webpack_require__("./node_modules/@ngxs/store/fesm2015/ngxs-store-operators.js");const actions_ARCHIVE_TASK="ARCHIVE_TASK",actions_PIN_TASK="PIN_TASK",actions_ERROR="APP_ERROR";class ArchiveTask{static#_=this.type=actions_ARCHIVE_TASK;constructor(payload){this.payload=payload}}class PinTask{static#_=this.type=actions_PIN_TASK;constructor(payload){this.payload=payload}}class AppError{static#_=this.type=actions_ERROR;constructor(payload){this.payload=payload}}let TasksState=class TasksState{static getError(state){return state.error}static getAllTasks(state){return state.tasks}pinTask({getState,setState},{payload}){const task=getState().tasks.find((task=>task.id===payload));if(task){const updatedTask={...task,state:"TASK_PINNED"};setState((0,ngxs_store_operators.r$)({tasks:(0,ngxs_store_operators.$G)((pinnedTask=>pinnedTask?.id===payload),updatedTask)}))}}archiveTask({getState,setState},{payload}){const task=getState().tasks.find((task=>task.id===payload));if(task){const updatedTask={...task,state:"TASK_ARCHIVED"};setState((0,ngxs_store_operators.r$)({tasks:(0,ngxs_store_operators.$G)((archivedTask=>archivedTask?.id===payload),updatedTask)}))}}setAppError({patchState,getState},{payload}){patchState({error:!getState().error})}};(0,tslib_es6.gn)([(0,ngxs_store.aU)(PinTask)],TasksState.prototype,"pinTask",null),(0,tslib_es6.gn)([(0,ngxs_store.aU)(ArchiveTask)],TasksState.prototype,"archiveTask",null),(0,tslib_es6.gn)([(0,ngxs_store.aU)(AppError)],TasksState.prototype,"setAppError",null),(0,tslib_es6.gn)([(0,ngxs_store.Qf)()],TasksState,"getError",null),(0,tslib_es6.gn)([(0,ngxs_store.Qf)()],TasksState,"getAllTasks",null),TasksState=(0,tslib_es6.gn)([(0,ngxs_store.ZM)({name:"taskbox",defaults:{tasks:[{id:"1",title:"Something",state:"TASK_INBOX"},{id:"2",title:"Something more",state:"TASK_INBOX"},{id:"3",title:"Something else",state:"TASK_INBOX"},{id:"4",title:"Something again",state:"TASK_INBOX"}],status:"idle",error:!1}}),(0,core.Injectable)()],TasksState);var pure_task_list_component=__webpack_require__("./src/app/components/pure-task-list/pure-task-list.component.ts");let TaskListComponent=class TaskListComponent{constructor(store){this.store=store,this.tasks$=store.select((state=>state.taskbox.tasks))}archiveTask(id){this.store.dispatch(new ArchiveTask(id))}pinTask(id){this.store.dispatch(new PinTask(id))}static#_=this.ctorParameters=()=>[{type:ngxs_store.yh}]};TaskListComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-task-list",standalone:!0,imports:[common.CommonModule,pure_task_list_component.C],template:'<app-pure-task-list [tasks]="tasks$ | async" (onArchiveTask)="archiveTask($event)" (onPinTask)="pinTask($event)">\n</app-pure-task-list>',styles:[task_list_componentngResource_default()]})],TaskListComponent);let PureInboxScreenComponent=class PureInboxScreenComponent{static#_=this.propDecorators={error:[{type:core.Input}]}};PureInboxScreenComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-pure-inbox-screen",standalone:!0,imports:[common.CommonModule,TaskListComponent],template:'@if (error) {\n<div *ngIf="error" class="page lists-show">\n  <div class="wrapper-message">\n    <span class="icon-face-sad"></span>\n    <p class="title-message">Oh no!</p>\n    <p class="subtitle-message">Something went wrong</p>\n  </div>\n</div>\n} @else {\n<div class="page lists-show">\n  <nav>\n    <h1 class="title-page">Taskbox</h1>\n  </nav>\n  <app-task-list></app-task-list>\n</div>\n\n}',styles:[pure_inbox_screen_componentngResource_default()]})],PureInboxScreenComponent);var test_dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const pure_inbox_screen_stories={component:PureInboxScreenComponent,title:"PureInboxScreen",tags:["autodocs"],decorators:[(0,dist.applicationConfig)({providers:[ngxs_store.yh,(0,core.importProvidersFrom)(ngxs_store.$l.forRoot([TasksState]))]})]},Default={},Error={args:{error:!0}},WithInteractions={play:(_ref=(0,asyncToGenerator.Z)((function*({canvasElement}){const canvas=(0,test_dist.uh)(canvasElement);yield test_dist.BX.click(canvas.getByLabelText("pinTask-1")),yield test_dist.BX.click(canvas.getByLabelText("pinTask-3"))})),function play(_x){return _ref.apply(this,arguments)})};var _ref;Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true\n  }\n}",...Error.parameters?.docs?.source}}},WithInteractions.parameters={...WithInteractions.parameters,docs:{...WithInteractions.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    // Simulates pinning the first task\n    await fireEvent.click(canvas.getByLabelText('pinTask-1'));\n    // Simulates pinning the third task\n    await fireEvent.click(canvas.getByLabelText('pinTask-3'));\n  }\n}",...WithInteractions.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Error","WithInteractions"]},"./node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"./src/app/components/pure-inbox-screen/pure-inbox-screen.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/components/pure-task-list/pure-task-list.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/components/task-list/task-list.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/components/task/task.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);